#!groovy

pipeline {
    agent { label 'linux_01' }
      
    stages {
        stage('Build') {
            steps {
                echo 'Construindo..'
                //deleteDir()
               // script {'sh java -version'}
                 sh '''
                    ls
                    cd my-app
                    mvn -B versions:set -DnewVersion=${BUILD_NUMBER}
                    mvn -B -Dmaven.test.skip=true clean package
                ''' 
            }
            post {
                success {
                    stash name: 'artifact', includes: 'my-app/target/my-app*.jar'
                }
            }
        }     
        
        stage('ler POM'){
          steps{
          echo 'lendo o pom'
            script {
              def pom = readMavenPom file: 'my-app/pom.xml'
              def ver=pom.version
              def artifactId=pom.artifactId
                def pack=pom.packaging
             // def groupId=pom.groupId
              print pack
                print ver
              // print groupid
              print artifactId
                pomFile = readFile('my-app/pom.xml')
                
 def pomv = new XmlParser().parseText(pomFile)
 def gavMap = [:]
 gavMap['groupId'] =  pomv['groupId'].text().trim()
 gavMap['artifactId'] =  pomv['artifactId'].text().trim()
 gavMap['version'] =  pomv['version'].text().trim()
                
                
            }
          }
        }
     
        stage('Deploy') {
            steps {
                echo 'Implantando no Ambiente @ParamAmbiente DEV CERT HOM....'
            }
        }
    }
}
